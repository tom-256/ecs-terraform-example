on:
  workflow_dispatch:

name: Deploy to ECS by workflow dispatch

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: describe image
        id: describe-image
        env:
          IMAGE_TAG: ${{ github.sha }}
          REPOSTORY:  ${{ github.repository }}
        run: |
          export EXIST=$(aws ecr describe-images --repository-name $REPOSTORY --image-ids imageTag=$IMAGE_TAG)
          echo "::set-output name=exist::$(test $EXIST != 0 && echo 'true' || echo 'false')"

      - name: build image if not exists
        id: build-image
        if: steps.describe-image.outputs.exist == 'false'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY:  ${{ github.repository }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f app/Dockerfile app/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: debug
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.repository }}
          IMAGE_TAG: ${{ github.sha }}
        run: echo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.repository }}
          IMAGE_TAG: ${{ github.sha }}
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definitions/service-a-task-def.json
          container-name: service-a
          image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ecs-test-service-a
          cluster: ecs-test
          wait-for-service-stability: true
